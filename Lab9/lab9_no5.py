def bubble_sort(lst):
    for loop in range(1, len(lst)):
        swapped = False
        for i in range(len(lst) - loop):
            if lst[i] > lst[i+1]:
                lst[i], lst[i+1] = lst[i+1], lst[i]
                swapped = True
        if swapped is False:
            break
    return lst

def bubble_sort_lenlst(lst):
    for loop in range(1, len(lst)):
        swapped = False
        for i in range(len(lst) - loop):
            if len(lst[i]) > len(lst[i+1]):
                lst[i], lst[i+1] = lst[i+1], lst[i]
                swapped = True

        if swapped is False:
            break
    return lst

def subset_sum(ans, lst, index = 0, result = None, carry = None): # ทำ combination ของ list และหา sublist ที่ผลรวมเท่ากับ ans
    if result is None:
        result = [] # ไว้ใช้ return จริง เป็น list หลังทำ combination
    if carry is None:
        carry = [] # ไว้ใช้ทด
    
    if index >= len(lst): # base case
        return result
    
    carry.append(lst[index])

    if sum(carry) == ans: # ถ้าผลลัพธ์ของ list carry = ans ที่ตั้งไว้
        result.append(carry.copy()) # append sublist ของ carry ที่ผลรวมเท่ากับ ans ที่ตั้งไว้

    result = subset_sum(ans, lst, index + 1, result, carry) # recursive ด้วย index + 1

    carry.pop()

    result = subset_sum(ans, lst, index + 1, result, carry)

    return result



ans, inp = input("Enter Input : ").split('/')
ans = int(ans)
inp = [int(e) for e in inp.split()]

sublist = []

inp = bubble_sort(inp)
sublist = subset_sum(ans, inp)

if len(sublist) != 0:
    for i in bubble_sort_lenlst(sublist):
        print(i)
else:
    print("No Subset")

# OUTPUT
# Enter Input : 2/-2 3 1 -1 0 -3 2
# [2]
# [-1, 3]
# [0, 2]  # [-1, 3] กับ [0, 2] มีขนาดเท่ากัน แต่ -1 < 0 ดังนั้น [-1, 3] จึงแสดงผลก่อน [0, 2]
# [-3, 2, 3]
# [-2, 1, 3]
# [-1, 0, 3]
# [-1, 1, 2]
# [-3, 0, 2, 3]
# [-2, -1, 2, 3]
# [-2, 0, 1, 3]   # [-2, -1, 2, 3] กับ [-2, 0, 1, 3] มีขนาดและตัวแรกสุดเท่ากัน แต่ตัวที่สอง -1 < 0 ดังนั้น [-2, -1, 2, 3] จึงแสดงผลก่อน [-2, 0, 1, 3]
# [-1, 0, 1, 2]
# [-3, -1, 1, 2, 3]
# [-2, -1, 0, 2, 3]
# [-3, -1, 0, 1, 2, 3]

# Enter Input : 2/1 0 2 -1
# [2]
# [0, 2]
# [-1, 1, 2]
# [-1, 0, 1, 2]

# Enter Input : 3/-1 0 1 2
# [1, 2]
# [0, 1, 2]

# Enter Input : 5/1 2 3 4
# [1, 4]
# [2, 3]

# Enter Input : 4/-1 0 1 2
# No Subset

# Enter Input : 1/-5 -4 -3 -2 -1 0 1 2 3 4 5
# [1]
# [-4, 5]
# [-3, 4]
# [-2, 3]
# [-1, 2]
# [0, 1]
# [-5, 1, 5]
# [-5, 2, 4]
# [-4, 0, 5]
# [-4, 1, 4]
# [-4, 2, 3]
# [-3, -1, 5]
# [-3, 0, 4]
# [-3, 1, 3]
# [-2, -1, 4]
# [-2, 0, 3]
# [-2, 1, 2]
# [-1, 0, 2]
# [-5, -3, 4, 5]
# [-5, -2, 3, 5]
# [-5, -1, 2, 5]
# [-5, -1, 3, 4]
# [-5, 0, 1, 5]
# [-5, 0, 2, 4]
# [-5, 1, 2, 3]
# [-4, -3, 3, 5]
# [-4, -2, 2, 5]
# [-4, -2, 3, 4]
# [-4, -1, 1, 5]
# [-4, -1, 2, 4]
# [-4, 0, 1, 4]
# [-4, 0, 2, 3]
# [-3, -2, 1, 5]
# [-3, -2, 2, 4]
# [-3, -1, 0, 5]
# [-3, -1, 1, 4]
# [-3, -1, 2, 3]
# [-3, 0, 1, 3]
# [-2, -1, 0, 4]
# [-2, -1, 1, 3]
# [-2, 0, 1, 2]
# [-5, -4, 1, 4, 5]
# [-5, -4, 2, 3, 5]
# [-5, -3, 0, 4, 5]
# [-5, -3, 1, 3, 5]
# [-5, -3, 2, 3, 4]
# [-5, -2, -1, 4, 5]
# [-5, -2, 0, 3, 5]
# [-5, -2, 1, 2, 5]
# [-5, -2, 1, 3, 4]
# [-5, -1, 0, 2, 5]
# [-5, -1, 0, 3, 4]
# [-5, -1, 1, 2, 4]
# [-5, 0, 1, 2, 3]
# [-4, -3, -1, 4, 5]
# [-4, -3, 0, 3, 5]
# [-4, -3, 1, 2, 5]
# [-4, -3, 1, 3, 4]
# [-4, -2, -1, 3, 5]
# [-4, -2, 0, 2, 5]
# [-4, -2, 0, 3, 4]
# [-4, -2, 1, 2, 4]
# [-4, -1, 0, 1, 5]
# [-4, -1, 0, 2, 4]
# [-4, -1, 1, 2, 3]
# [-3, -2, -1, 2, 5]
# [-3, -2, -1, 3, 4]
# [-3, -2, 0, 1, 5]
# [-3, -2, 0, 2, 4]
# [-3, -2, 1, 2, 3]
# [-3, -1, 0, 1, 4]
# [-3, -1, 0, 2, 3]
# [-2, -1, 0, 1, 3]
# [-5, -4, -2, 3, 4, 5]
# [-5, -4, -1, 2, 4, 5]
# [-5, -4, 0, 1, 4, 5]
# [-5, -4, 0, 2, 3, 5]
# [-5, -4, 1, 2, 3, 4]
# [-5, -3, -2, 2, 4, 5]
# [-5, -3, -1, 1, 4, 5]
# [-5, -3, -1, 2, 3, 5]
# [-5, -3, 0, 1, 3, 5]
# [-5, -3, 0, 2, 3, 4]
# [-5, -2, -1, 0, 4, 5]
# [-5, -2, -1, 1, 3, 5]
# [-5, -2, -1, 2, 3, 4]
# [-5, -2, 0, 1, 2, 5]
# [-5, -2, 0, 1, 3, 4]
# [-5, -1, 0, 1, 2, 4]
# [-4, -3, -2, 1, 4, 5]
# [-4, -3, -2, 2, 3, 5]
# [-4, -3, -1, 0, 4, 5]
# [-4, -3, -1, 1, 3, 5]
# [-4, -3, -1, 2, 3, 4]
# [-4, -3, 0, 1, 2, 5]
# [-4, -3, 0, 1, 3, 4]
# [-4, -2, -1, 0, 3, 5]
# [-4, -2, -1, 1, 2, 5]
# [-4, -2, -1, 1, 3, 4]
# [-4, -2, 0, 1, 2, 4]
# [-4, -1, 0, 1, 2, 3]
# [-3, -2, -1, 0, 2, 5]
# [-3, -2, -1, 0, 3, 4]
# [-3, -2, -1, 1, 2, 4]
# [-3, -2, 0, 1, 2, 3]
# [-5, -4, -3, 1, 3, 4, 5]
# [-5, -4, -2, 0, 3, 4, 5]
# [-5, -4, -2, 1, 2, 4, 5]
# [-5, -4, -1, 0, 2, 4, 5]
# [-5, -4, -1, 1, 2, 3, 5]
# [-5, -4, 0, 1, 2, 3, 4]
# [-5, -3, -2, -1, 3, 4, 5]
# [-5, -3, -2, 0, 2, 4, 5]
# [-5, -3, -2, 1, 2, 3, 5]
# [-5, -3, -1, 0, 1, 4, 5]
# [-5, -3, -1, 0, 2, 3, 5]
# [-5, -3, -1, 1, 2, 3, 4]
# [-5, -2, -1, 0, 1, 3, 5]
# [-5, -2, -1, 0, 2, 3, 4]
# [-4, -3, -2, -1, 2, 4, 5]
# [-4, -3, -2, 0, 1, 4, 5]
# [-4, -3, -2, 0, 2, 3, 5]
# [-4, -3, -2, 1, 2, 3, 4]
# [-4, -3, -1, 0, 1, 3, 5]
# [-4, -3, -1, 0, 2, 3, 4]
# [-4, -2, -1, 0, 1, 2, 5]
# [-4, -2, -1, 0, 1, 3, 4]
# [-3, -2, -1, 0, 1, 2, 4]
# [-5, -4, -3, -1, 2, 3, 4, 5]
# [-5, -4, -3, 0, 1, 3, 4, 5]
# [-5, -4, -2, -1, 1, 3, 4, 5]
# [-5, -4, -2, 0, 1, 2, 4, 5]
# [-5, -4, -1, 0, 1, 2, 3, 5]
# [-5, -3, -2, -1, 0, 3, 4, 5]
# [-5, -3, -2, -1, 1, 2, 4, 5]
# [-5, -3, -2, 0, 1, 2, 3, 5]
# [-5, -3, -1, 0, 1, 2, 3, 4]
# [-4, -3, -2, -1, 0, 2, 4, 5]
# [-4, -3, -2, -1, 1, 2, 3, 5]
# [-4, -3, -2, 0, 1, 2, 3, 4]
# [-5, -4, -3, -2, 1, 2, 3, 4, 5]
# [-5, -4, -3, -1, 0, 2, 3, 4, 5]
# [-5, -4, -2, -1, 0, 1, 3, 4, 5]
# [-5, -3, -2, -1, 0, 1, 2, 4, 5]
# [-4, -3, -2, -1, 0, 1, 2, 3, 5]
# [-5, -4, -3, -2, 0, 1, 2, 3, 4, 5]